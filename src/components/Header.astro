---
import SunIcon from "./icons/SunIcon.astro";
import MoonIcon from "./icons/MoonIcon.astro";

const sections = [
    {
        name: "Home",
        label: "home",
        url: "/",
    },
    {
        name: "Apps",
        label: "apps",
        url: "/apps",
    },
    {
        name: "Addons",
        label: "addons",
        url: "/addons",
    },
    {
        name: "Proyectos",
        label: "proyectos",
        url: "/proyectos",
    },
    {
        name: "Blog",
        label: "blog",
        url: "/blog",
    },
];
---

<header
    class="sticky inset-x-0 top-0 z-10 w-full flex items-center justify-end mx-auto sm:mx-0
    font-bold
    bg-opacity-100 shadow-md
    bg-zinc-200
    dark:bg-opacity-80
    dark:backdrop-blur-sm
    dark:bg-slate-900"
>
    <div
        class="flex items-center justify-between py-2 px-4 xl:w-[76rem] mx-auto w-full"
    >
        <div
            class="text-center font-bold text-3xl px-4 "
        >
            <!-- Burger Menu -->
            <button
                class="sm:hidden text-black dark:text-white"
                id="burger-show-menu"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="icon icon-tabler icons-tabler-outline icon-tabler-baseline-density-medium"
                >
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M4 20h16"></path>
                    <path d="M4 12h16"></path>
                    <path d="M4 4h16"></path>
                </svg>
            </button>
        </div>

        <nav class="flex items-center justify-end py-2 px-4 gap-0 lg:gap-3">
            <div class="sm:flex gap-2 hidden">
                {
                    sections.map((item) => (
                        <a
                            class="text-lg text-black dark:text-white hover:text-blue-700 dark:hover:text-blue-500"
                            aria-label={item.label}
                            href={item.url}
                        >
                            {item.name}
                        </a>
                    ))
                }
            </div>
            <div
                id="darkmode"
                class="p-1 mb-1 border-l ml-6 pl-6 text-black dark:text-white dark:border-slate-800 border-slate-400 hover:text-blue-700 dark:hover:text-blue-500"
            >
                <div class="hidden dark:flex">
                    <SunIcon />
                </div>
                <div class="dark:hidden flex">
                    <MoonIcon />
                </div>
            </div>
        </nav>
    </div>
</header>

<div
    class="fixed translate-y-[0rem] h-full py-10 z-10 -translate-x-60"
    id="vertical-menu"
>
    <nav class="flex flex-col gap-5 items-center justify-center">
        {
            sections.map((item) => (
                <a
                    class="text-4xl font-bold text-black dark:text-white hover:text-blue-400 active:text-blue-300 "
                    href={item.url}
                    aria-label={item.label}
                >
                    {item.name}
                </a>
            ))
        }
    </nav>
</div>

<script>
    const darkTheme = "dark";
    const lighTheme = "light";
    const dataTheme = "data-theme";

    const preTheme = localStorage.getItem("theme");
    if (preTheme === null || preTheme === "") {
        localStorage.setItem("theme", darkTheme);
        document.documentElement.setAttribute(dataTheme, darkTheme);
    } else {
        document.documentElement.setAttribute(dataTheme, preTheme);
    }

    const darkModeButton = document.querySelector("#darkmode");
    darkModeButton?.addEventListener("click", () => {
        const isDark = document.documentElement.classList.toggle(darkTheme);
        localStorage.setItem("theme", isDark ? darkTheme : lighTheme);
        document.documentElement.setAttribute(
            "data-theme",
            isDark ? darkTheme : lighTheme,
        );
    });

    // Sidebar
    let showSidebar: boolean = false;
    const burger = document.querySelector("#burger-show-menu") as Element;
    const vmenu = document.querySelector("#vertical-menu") as Element;

    burger?.addEventListener("click", () => {
        showSidebar = !showSidebar;
        //vmenu.classList.toggle('hidden');
        const common: string =
            "fixed translate-y-[0rem] h-full py-10 z-10 dark:bg-slate-900 backdrop-blur-md text-black dark:text-white bg-zinc-200 bg-opacity-90 dark:bg-opacity-50";
        vmenu.className = showSidebar
            ? common + " " + "translate-x-0 w-full transition-transform"
            : common + " " + "-translate-x-60 w-52 transition-transform";
    });
</script>
